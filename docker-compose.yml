version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n_user
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=n8n
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - n8n-network

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=changeme
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=changeme
      - GENERIC_TIMEZONE=America/New_York
    ports:
      - "5678:5678"
    volumes:
      - n8n-data:/home/node/.n8n
      - ./workflows:/workflows
      - ./credentials:/credentials
    depends_on:
      - postgres
    networks:
      - n8n-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - n8n-network

  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-server
    restart: unless-stopped
    environment:
      - MCP_SERVER_PORT=3000
      - MCP_SERVER_HOST=0.0.0.0
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    depends_on:
      - postgres
      - ollama
    networks:
      - n8n-network

volumes:
  postgres-data:
  n8n-data:
  ollama-data:

networks:
  n8n-network:
    driver: bridge
